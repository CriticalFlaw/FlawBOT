<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERR_CHANNEL_EXISTS" xml:space="preserve">
    <value>Channel with the same name already exists.</value>
  </data>
  <data name="ERR_CHANNEL_NAME" xml:space="preserve">
    <value>The name cannot be blank or over 100 characters.</value>
  </data>
  <data name="ERR_CHANNEL_TOPIC" xml:space="preserve">
    <value>Channel topic must be less than 1024 characters long.</value>
  </data>
  <data name="ERR_COLOR_INVALID" xml:space="preserve">
    <value>Invalid color code. Please enter a HEX color code like #E7B53B.</value>
  </data>
  <data name="ERR_DOG_PHOTO" xml:space="preserve">
    <value>Unable to reach the Dog.CEO API.</value>
  </data>
  <data name="ERR_EMOJI_ADD" xml:space="preserve">
    <value>Unable to create the server emoji. Either the HTTP request failed or Discord prevented the operation from completing.</value>
  </data>
  <data name="ERR_EMOJI_IMAGE" xml:space="preserve">
    <value>Please provide a URL pointing to an emoji image or attach an image.</value>
  </data>
  <data name="ERR_EMOJI_NAME" xml:space="preserve">
    <value>Server emoji name is invalid.</value>
  </data>
  <data name="ERR_EMOJI_SIZE" xml:space="preserve">
    <value>Unable to create the server emoji. Either the image size was too large.</value>
  </data>
  <data name="ERR_MATH_EQUATION" xml:space="preserve">
    <value>Error calculating math equation, make sure your values are integers and the operation is valid!</value>
  </data>
  <data name="ERR_NASA_API" xml:space="preserve">
    <value>Unable to reach the NASA API.</value>
  </data>
  <data name="ERR_POLL_QUESTION" xml:space="preserve">
    <value>Please provide a poll question.</value>
  </data>
  <data name="ERR_REPORT_CHAR_LENGTH" xml:space="preserve">
    <value>Please provide more information on the issue (50 characters minimum).</value>
  </data>
  <data name="ERR_ROLE_EXISTING" xml:space="preserve">
    <value>Please provide an existing server role.</value>
  </data>
  <data name="ERR_ROLE_NAME" xml:space="preserve">
    <value>Role name cannot be blank.</value>
  </data>
  <data name="ERR_ROLE_NONE" xml:space="preserve">
    <value>This user doesn't have any roles.</value>
  </data>
  <data name="ERR_ROLE_NOT_ALLOWED" xml:space="preserve">
    <value>You are unauthorized to remove roles from this user.</value>
  </data>
  <data name="ERR_STEAM_CONNECT_FORMAT" xml:space="preserve">
    <value>Invalid connection info, follow the format: 123.345.56.789:000; password hello</value>
  </data>
  <data name="NOT_FOUND_EMOJI" xml:space="preserve">
    <value>Emoji not found in the server list.</value>
  </data>
  <data name="NOT_FOUND_GENERIC" xml:space="preserve">
    <value>No results found.</value>
  </data>
  <data name="NOT_FOUND_LOCATION" xml:space="preserve">
    <value>Location not found.</value>
  </data>
  <data name="NOT_FOUND_REDDIT" xml:space="preserve">
    <value>Reddit post not found.</value>
  </data>
  <data name="NOT_FOUND_SUBREDDIT" xml:space="preserve">
    <value>Subreddit not found.</value>
  </data>
  <data name="NOT_FOUND_TWITCH" xml:space="preserve">
    <value>Twitch channel is offline or was not found.</value>
  </data>
  <data name="NOT_FOUND_WIKIPEDIA" xml:space="preserve">
    <value>Wikipedia page not found.</value>
  </data>
  <data name="REQUEST_TIMEOUT" xml:space="preserve">
    <value>Request timed out...</value>
  </data>
  <data name="SIMPSONS_GIF_WARNING" xml:space="preserve">
    <value>Note: First time gifs take a few minutes to properly generate.</value>
  </data>
  <data name="URL_DISCORD" xml:space="preserve">
    <value>https://discord.gg/</value>
  </data>
  <data name="URL_STEAM_GROUP" xml:space="preserve">
    <value>https://steamcommunity.com/groups/</value>
  </data>
  <data name="URL_STEAM_USER" xml:space="preserve">
    <value>https://steamcommunity.com/id/</value>
  </data>
  <data name="URL_TEAMWORK_SERVERS" xml:space="preserve">
    <value>https://teamwork.tf/community/customserverlist/</value>
  </data>
  <data name="URL_TWITCH_CHANNEL" xml:space="preserve">
    <value>https://www.twitch.tv/</value>
  </data>
  <data name="URL_TWITTER" xml:space="preserve">
    <value>https://twitter.com/</value>
  </data>
  <data name="URL_YOUTUBE_CHANNEL" xml:space="preserve">
    <value>https://www.youtube.com/channel/</value>
  </data>
</root>